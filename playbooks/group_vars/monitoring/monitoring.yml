---
#   Copyright Red Hat, Inc. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.
#

# Variables for rdo-infra/sensu-client
rdo_releases:
  - "master-head"
  - "master"
  - "train"
  - "stein"
  - "rocky"
  - "queens"
  - "pike"
  - "ocata"

rdo_tags:
  - "current"
  - "consistent"
  - "current-passed-ci"

# Domains that are expected to have http/s enabled
rdo_domains:
  - images.rdoproject.org
  - console.registry.rdoproject.org
  - trunk.registry.rdoproject.org
  - registry.rdoproject.org:8443
  - trunk.rdoproject.org
  - review.rdoproject.org
  - www.rdoproject.org
  - logs.rdoproject.org
  - thirdparty.logs.rdoproject.org
  - centos.logs.rdoproject.org
  - uchiwa.monitoring.rdoproject.org
  - lists.rdoproject.org

# Domains where we only expect http enabled
rdo_domains_httponly:
  - mirror.regionone.rdo-cloud.rdoproject.org
  - mirror.regionone.vexxhost.rdoproject.org

rdo_backup_locations:
  - dir: /var/lib/backup_lists_rdo/bup
    domain: lists.rdoproject.org
    month_subdir: 0
  - dir: /var/lib/backup_review_rdo/bup
    domain: review.rdoproject.org
    month_subdir: 1

backup_checks: >
    {% set checks = {} -%}
    {% for loc in rdo_backup_locations -%}
      {% set _ = checks.update({ "check-backup-" ~ loc.domain | replace(".", "-"): {
                  "command": "/opt/sensu/embedded/bin/check-bup-backup-age.sh" ~ " " ~ loc.dir ~ " " ~ loc.domain ~ " " ~ "172800" ~ " " ~ loc.month_subdir,
                  "subscribers": "backup_server",
             }
         })
      -%}
    {% endfor -%}
    {{ checks }}

http_checks: >
    {% set checks = {} -%}
    {% for domain in rdo_domains -%}
      {% set _ = checks.update({ "check-http-" ~ domain | replace(".", "-") | replace(":8443", ""): {
                  "command": "/opt/sensu/embedded/bin/check-http.rb -u https://" ~ domain,
                  "subscribers": "monitoring_master",
              }
          })
      -%}
      {% set _ = checks.update({ "check-https-" ~ domain | replace(".", "-") | replace(":8443", ""): {
                  "command": "/opt/sensu/embedded/bin/check-https-cert.rb -c 5 -w 10 -u https://" ~ domain,
                  "subscribers": "monitoring_master",
              }
          })
      -%}
    {% endfor -%}
    {% for domain in rdo_domains_httponly -%}
      {% set _ = checks.update({ "check-http-" ~ domain | replace(".", "-") | replace(":8443", ""): {
                  "command": "/opt/sensu/embedded/bin/check-http.rb -u http://" ~ domain,
                  "subscribers": "monitoring_master",
              }
          })
      -%}
    {% endfor -%}
    {{ checks }}

# Template the list of DLRN checks for every release and tag we're interested in
delorean_checks: >
    {% set checks = {} -%}
    {% for release in rdo_releases -%}
    {% for tag in rdo_tags -%}
    {% if not release == "master-head" -%}
    {% set _ = checks.update({ "check-delorean-" ~ release ~ "-" ~ tag: {
                "command": "/opt/sensu/embedded/bin/check-delorean-builds.py centos7-" ~ release ~ " " ~ tag,
                "subscribers": "monitoring_master",
                "custom": {
                    "broadcast": "#rdo",
                    "retry_occurrences": "180"
                }
            }
        })
    -%}
    {% endif -%}
    {% endfor -%}
    {% set _ = checks.update({ "check-delorean-update-" ~ release: {
                "command": "/opt/sensu/embedded/bin/check-http-file-age.sh https://trunk.rdoproject.org/centos7-" ~ release ~ "/current/build.log 86400",
                "subscribers": "monitoring_master",
                "custom": {
                    "broadcast": "#rdo-dev",
                    "retry_occurrences": "180"
                }
            }
        })
    -%}
    {% endfor -%}
    {{ checks }}

additional_checks:
  check-rabbitmq:
    command: '/opt/sensu/embedded/bin/check-process.rb -p "rabbitmq" -C 1'
    subscribers: 'monitoring_master'
  check-rdobot:
    command: '/opt/sensu/embedded/bin/check-process.rb -p "rdobot" -C 1'
    subscribers: 'monitoring_master'
  check-sensu-api:
    command: '/opt/sensu/embedded/bin/check-process.rb -p "sensu-api" -C 1'
    subscribers: 'monitoring_master'
  check-sensu-server:
    command: '/opt/sensu/embedded/bin/check-process.rb -p "sensu-server" -C 1'
    subscribers: 'monitoring_master'
  check-uchiwa:
    command: "/opt/sensu/embedded/bin/check-uchiwa-health.rb -h localhost:3000/uchiwa -u rdo -p rdo"
    subscribers: 'monitoring_master'
  check-httpd:
    command: '/opt/sensu/embedded/bin/check-process.rb -p "httpd" -C 1'
    subscribers: 'monitoring_master'
  check-domain-registration:
    command: '/opt/sensu/embedded/bin/check-whois-domain-expiration.rb -d rdoproject.org -c 60'
    subscribers: 'monitoring_master'
    interval: '14400'
    ttl: '43200'
  check-afs-centos:
    command: '/opt/sensu/embedded/bin/check-http-json.rb -u "http://graphite.openstack.org/render?target=stats.gauges.afs.afs01_dfw_openstack_org.vol.mirror_centos_readonly.creation&format=json&from=-10min&noNullPoints=True&maxDataPoints=2" --key "[0].datapoints[0][0]" --value-greater-than $(date +%s --date=yesterday)'
    subscribers: 'monitoring_master'
  check-postfix:
    command: '/opt/sensu/embedded/bin/check-systemd.rb -s postfix.service'
    subscribers: 'lists_rdo'
  check-postgrey:
    command: '/opt/sensu/embedded/bin/check-systemd.rb -s postgrey.service'
    subscribers: 'lists_rdo'
  check-mailman:
    command: '/opt/sensu/embedded/bin/check-systemd.rb -s mailmanctl.service'
    subscribers: 'lists_rdo'
  check-spamassassin:
    command: '/opt/sensu/embedded/bin/check-systemd.rb -s spamassassin.service'
    subscribers: 'lists_rdo'
  check-dovecot:
    command: '/opt/sensu/embedded/bin/check-systemd.rb -s dovecot.service'
    subscribers: 'lists_rdo'

rdo_additional_checks: "{{ additional_checks | combine(delorean_checks) | combine(http_checks) | combine(backup_checks) }}"

rdo_subscriptions:
  - "default"
  - "monitoring_master"
